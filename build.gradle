import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id "fabric-loom" version "1.3-SNAPSHOT"
    id "legacy-looming" version "1.3-SNAPSHOT" // Version must be the same as fabric-loom's
    id "maven-publish"
}

version = project.mod_version
group = project.maven_group

loom {}

var lwjglNatives = "";

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
        break
}

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
    maven { url 'https://litarvan.github.io/maven' }
    maven {
        name = 'Babric'
        url = 'https://maven.glass-launcher.net/babric'
    }
    maven {
        name = "cursed-mappings"
        url = "https://raw.githubusercontent.com/BleachDev/cursed-mappings/main/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(legacy.yarn(project.minecraft_version, project.yarn_build))
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}"



    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation 'com.github.nevalackin:homo-bus:1.0.0'
}
base {
    archivesName = project.archives_base_name
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) it.options.release = 8

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}